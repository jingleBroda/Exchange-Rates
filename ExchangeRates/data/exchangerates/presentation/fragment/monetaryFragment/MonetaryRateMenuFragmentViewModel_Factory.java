// Generated by Dagger (https://dagger.dev).
package com.example.exchangerates.presentation.fragment.monetaryFragment;

import com.example.exchangerates.domain.usecase.MakeApiUseCaseRx;
import com.example.exchangerates.domain.usecase.MakeDbDataUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MonetaryRateMenuFragmentViewModel_Factory implements Factory<MonetaryRateMenuFragmentViewModel> {
  private final Provider<MakeApiUseCase> makeApiUseCaseProvider;

  private final Provider<MakeDbDataUseCase> makeDbDataUseCaseProvider;

  public MonetaryRateMenuFragmentViewModel_Factory(Provider<MakeApiUseCase> makeApiUseCaseProvider,
      Provider<MakeDbDataUseCase> makeDbDataUseCaseProvider) {
    this.makeApiUseCaseProvider = makeApiUseCaseProvider;
    this.makeDbDataUseCaseProvider = makeDbDataUseCaseProvider;
  }

  @Override
  public MonetaryRateMenuFragmentViewModel get() {
    return newInstance(makeApiUseCaseProvider.get(), makeDbDataUseCaseProvider.get());
  }

  public static MonetaryRateMenuFragmentViewModel_Factory create(
      Provider<MakeApiUseCase> makeApiUseCaseProvider,
      Provider<MakeDbDataUseCase> makeDbDataUseCaseProvider) {
    return new MonetaryRateMenuFragmentViewModel_Factory(makeApiUseCaseProvider, makeDbDataUseCaseProvider);
  }

  public static MonetaryRateMenuFragmentViewModel newInstance(MakeApiUseCase makeApiUseCase,
      MakeDbDataUseCase makeDbDataUseCase) {
    return new MonetaryRateMenuFragmentViewModel(makeApiUseCase, makeDbDataUseCase);
  }
}
