// Generated by Dagger (https://dagger.dev).
package com.example.exchangerates.app.di.module;

import com.example.exchangerates.data.room.ExchangeRatesRoomDB;
import com.example.exchangerates.data.room.ExchangeRatesRoomDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_GetDAOFactory implements Factory<ExchangeRatesRoomDao> {
  private final RoomModule module;

  private final Provider<ExchangeRatesRoomDB> dbProvider;

  public RoomModule_GetDAOFactory(RoomModule module, Provider<ExchangeRatesRoomDB> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public ExchangeRatesRoomDao get() {
    return getDAO(module, dbProvider.get());
  }

  public static RoomModule_GetDAOFactory create(RoomModule module,
      Provider<ExchangeRatesRoomDB> dbProvider) {
    return new RoomModule_GetDAOFactory(module, dbProvider);
  }

  public static ExchangeRatesRoomDao getDAO(RoomModule instance, ExchangeRatesRoomDB db) {
    return Preconditions.checkNotNullFromProvides(instance.getDAO(db));
  }
}
